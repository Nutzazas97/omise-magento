<?php $_code = $this->getMethodCode(); ?>

<ul id="payment_form_<?php echo $_code; ?>" class="form-list" style="display:none;">

    <!-- Omise's validation advice -->
    <li>
        <div id="omise-validation-advice" class="validation-advice"></div>
    </li>

    <!-- Card Type -->
    <li>
        <label for="<?php echo $_code; ?>_cc_type" class="required">
            <em>*</em><?php echo $this->__('Credit Card Type'); ?>
        </label>
        <div class="input-box">
            <select id="<?php echo $_code; ?>_cc_type" name="payment[cc_type]" class="required-entry validate-cc-type-select">
                <option value=""><?php echo $this->__('--Please Select--'); ?></option>

                <?php $_ccType = $this->getInfoData('cc_type'); ?>
                <?php foreach ($this->getCcAvailableTypes() as $_typeCode => $_typeName): ?>
                    <option value="<?php echo $_typeCode; ?>"<?php if($_typeCode == $_ccType): ?> selected="selected"<?php endif; ?>><?php echo $_typeName; ?></option>
                <?php endforeach; ?>
            </select>
        </div>

        <!-- For keep Omise's token -->
        <input id="<?php echo $_code; ?>_token" type="hidden" name="payment[omise_token]">
    </li>

    <!-- Card Holder Name -->
    <li>
        <label for="<?php echo $_code; ?>_cc_name" class="required">
            <em>*</em><?php echo $this->__('Credit Card Holder Name'); ?>
        </label>
        <div class="input-box">
            <input id="<?php echo $_code; ?>_cc_name" type="text" title="<?php echo $this->__('Credit Card Holder Name'); ?>" value="<?php echo $this->escapeHtml($this->getInfoData('cc_owner')); ?>" class="input-text required-entry" />
        </div>
    </li>

    <!-- Card Number -->
    <li>
        <label for="<?php echo $_code; ?>_cc_number" class="required">
            <em>*</em><?php echo $this->__('Credit Card Number'); ?>
        </label>
        <div class="input-box">
            <input id="<?php echo $_code; ?>_cc_number" type="text" title="<?php echo $this->__('Credit Card Number'); ?>" autocomplete="off" value="" class="input-text validate-cc-number validate-cc-type" />
        </div>
    </li>

    <!-- Expiration Date -->
    <li id="<?php echo $_code; ?>_cc_type_exp_div">
        <label for="<?php echo $_code; ?>_expiration" class="required">
            <em>*</em><?php echo $this->__('Expiration Date'); ?>
        </label>
        <div class="input-box">
            <div class="v-fix">
                <select id="<?php echo $_code; ?>_expiration" class="month validate-cc-exp required-entry">
                    <?php $_ccExpMonth = $this->getInfoData('cc_exp_month'); ?>
                    <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                        <option value="<?php echo $k ? $k : ''; ?>"<?php if($k == $_ccExpMonth): ?> selected="selected"<?php endif; ?>><?php echo $v; ?></option>
                    <?php endforeach; ?>
                </select>
            </div>
            <div class="v-fix">
                <?php $_ccExpYear = $this->getInfoData('cc_exp_year'); ?>
                <select id="<?php echo $_code; ?>_expiration_yr" class="year required-entry">
                    <?php foreach ($this->getCcYears() as $k=>$v): ?>
                        <option value="<?php echo $k ? $k : ''; ?>"<?php if($k == $_ccExpYear): ?> selected="selected"<?php endif; ?>><?php echo $v; ?></option>
                    <?php endforeach; ?>
                </select>
            </div>
        </div>
    </li>

    <li id="<?php echo $_code; ?>_cc_type_cvv_div">
        <label for="<?php echo $_code; ?>_cc_cid" class="required">
            <em>*</em><?php echo $this->__('Card Verification Number'); ?>
        </label>
        <div class="input-box">
            <div class="v-fix">
                <input id="<?php echo $_code; ?>_cc_cid" type="password" title="<?php echo $this->__('Card Verification Number'); ?>" autocomplete="off" value="" class="input-text cvv required-entry validate-cc-cvn" />
            </div>
            <a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?'); ?></a>
        </div>
    </li>

    <!-- Security Code -->
    <?php echo $this->getChildHtml(); ?>
</ul>

<script type="text/javascript">
    var cardObject, tokenField, card, processing, buttons, inMemoryButton, messageBox, dirty;

    messageBox = document.getElementById('omise-validation-advice');
    tokenField = document.getElementById('omise_gateway_token');
    cardObject = {
        name             : document.getElementById('omise_gateway_cc_name'),
        number           : document.getElementById('omise_gateway_cc_number'),
        expiration_month : document.getElementById('omise_gateway_expiration'),
        expiration_year  : document.getElementById('omise_gateway_expiration_yr'),
        security_code    : document.getElementById('omise_gateway_cc_cid')
    }
    card       = {};
    processing = false;
    dirty      = true;

    function getScript(url, success) {
        var script, head, done;

        script     = document.createElement("script");
        script.src = url;

        head = document.getElementsByTagName("head")[0];
        done = false;

        // Attach handlers for all browsers
        script.onload = script.onreadystatechange = function() {
            if (! done && (!this.readyState || this.readyState == "loaded" || this.readyState == "complete")) {
                done = true;

                // callback function provided as param
                success();

                script.onload = script.onreadystatechange = null;
                head.removeChild(script);
            };
        };

        head.appendChild(script);
    };

    function createOmiseToken() {
        Omise.setPublicKey("<?php echo $this->getOmiseKeys('public_key'); ?>");

        Omise.createToken("card", card, function(statusCode, response) {
            var i;

            if (statusCode == 200) {
                tokenField.value = response.id;
            }
            else {
                messageBox.innerHTML = response.message;
            }

            for (i = 0; i < inMemoryButton.length; ++i) {
                inMemoryButton[i].disabled = false;
            }

            processing = false;
            dirty      = false;
        });
    }

    if ('<?php echo $this->isOscSupportEnabled(); ?>') {
        function observeForm(event) {
            event.preventDefault();

            for (key in cardObject) {
                if (cardObject[key].value == '') {
                    return false;
                }

                if (card[key] && card[key] != cardObject[key].value) {
                    dirty = true;
                }

                card[key] = cardObject[key].value;
            }

            if (! processing && dirty) {
                var i;

                processing           = true;
                buttons              = document.getElementsByTagName('button');
                inMemoryButton       = [];
                messageBox.innerHTML = '';

                for (i = 0; i < buttons.length; ++i) {
                    if (! buttons[i].disabled) {
                        buttons[i].disabled = true;
                        inMemoryButton.push(buttons[i]);
                    }
                }

                if (typeof Omise === 'undefined') {
                    getScript('https://cdn.omise.co/omise.min.js.gz', createOmiseToken);
                } else {
                    createOmiseToken();
                }
            }
        }

        cardObject.name.addEventListener('blur', observeForm);
        cardObject.number.addEventListener('blur', observeForm);
        cardObject.expiration_month.addEventListener('blur', observeForm);
        cardObject.expiration_year.addEventListener('blur', observeForm);
        cardObject.security_code.addEventListener('blur', observeForm);
    }
    else {
        // Hook Payment.save function by wrapping Omise logic on top of the 'Payment.prototype.save'
        Payment.prototype.save = Payment.prototype.save.wrap(function(superMethod) {
            var omisePayment = document.getElementById("p_method_omise_gateway");

            if (! omisePayment.checked) {
                return superMethod();
            }

            var validator = new Validation("co-payment-form");

            if (validator.validate()) {
                checkout.setLoadWaiting('payment');

                getScript("https://cdn.omise.co/omise.min.js.gz", function() {
                    // Set Omise key
                    Omise.setPublicKey("<?php echo $this->getOmiseKeys('public_key'); ?>");

                    var formInput             = {
                            "name"             : document.getElementById("omise_gateway_cc_name"),
                            "number"           : document.getElementById("omise_gateway_cc_number"),
                            "expiration_month" : document.getElementById("omise_gateway_expiration"),
                            "expiration_year"  : document.getElementById("omise_gateway_expiration_yr"),
                            "security_code"    : document.getElementById("omise_gateway_cc_cid"),
                            "omise_token"      : document.getElementById("omise_gateway_token")
                        },
                        omiseValidationAdvice = document.getElementById("omise-validation-advice");

                    var card = {
                        "name"             : formInput.name.value,
                        "number"           : formInput.number.value,
                        "expiration_month" : formInput.expiration_month.value,
                        "expiration_year"  : formInput.expiration_year.value,
                        "security_code"    : formInput.security_code.value
                    };

                    /**
                     * Send a request to create a token then trigger the callback function once
                     * a response is received from Omise.
                     *
                     * Note that the response could be an error and this needs to be handled within
                     * the callback.
                     */
                    Omise.createToken("card", card, function(statusCode, response) {
                        if (response.object == "error") {
                            omiseValidationAdvice.innerHTML = response.message;
                            checkout.setLoadWaiting(false);
                        } else if (typeof response.card != 'undefined' && !response.card.security_code_check) {
                            omiseValidationAdvice.innerHTML = 'This card cannot authorize, please contact our support.';
                            checkout.setLoadWaiting(false);
                        } else {
                            formInput.omise_token.value         = response.id;

                            formInput.name.disabled             = true;
                            formInput.number.disabled           = true;
                            formInput.expiration_month.disabled = true;
                            formInput.expiration_year.disabled  = true;
                            formInput.security_code.disabled    = true;

                            checkout.setLoadWaiting(false);
                            return superMethod();
                        };
                    });
                });
            }
        });
    }
</script>
